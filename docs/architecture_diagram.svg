<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <!-- Gradient definitions for modern look -->
    <linearGradient id="clientGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4A90E2;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#357ABD;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="dockerGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#2496ED;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#1A7BB8;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="fastapiGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#009688;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00695C;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="postgresGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#336791;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#2A5373;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="presentationGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#66BB6A;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#4CAF50;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="businessGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#FF9800;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#F57C00;stop-opacity:1" />
    </linearGradient>
    
    <!-- Drop shadow filter -->
    <filter id="dropshadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="2" stdDeviation="3" flood-color="#00000030"/>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="800" height="600" fill="#f8f9fa"/>
  
  <!-- Title -->
  <text x="400" y="25" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="#2c3e50">
    TaskTracker System Architecture
  </text>
  
  <!-- Client Layer -->
  <rect x="50" y="50" width="700" height="80" rx="8" ry="8" 
        fill="url(#clientGradient)" stroke="#2c3e50" stroke-width="2" filter="url(#dropshadow)"/>
  <text x="400" y="75" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white">
    CLIENT LAYER
  </text>
  <text x="70" y="95" font-family="Arial, sans-serif" font-size="12" fill="white">
    • Browser (Swagger UI)
  </text>
  <text x="250" y="95" font-family="Arial, sans-serif" font-size="12" fill="white">
    • API Testing Tools (Postman, curl)
  </text>
  <text x="500" y="95" font-family="Arial, sans-serif" font-size="12" fill="white">
    • Frontend Applications
  </text>
  <text x="70" y="110" font-family="Arial, sans-serif" font-size="12" fill="white">
    • Mobile Apps
  </text>
  <text x="250" y="110" font-family="Arial, sans-serif" font-size="12" fill="white">
    • Third-party Integrations
  </text>
  
  <!-- HTTP Arrow -->
  <path d="M 400 140 L 400 160" stroke="#34495e" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="420" y="155" font-family="Arial, sans-serif" font-size="11" fill="#34495e">
    HTTP/HTTPS Requests
  </text>
  <text x="420" y="170" font-family="Arial, sans-serif" font-size="11" fill="#34495e">
    (GET, POST, PUT, DELETE)
  </text>
  
  <!-- Docker Compose Container -->
  <rect x="50" y="180" width="700" height="380" rx="8" ry="8" 
        fill="url(#dockerGradient)" stroke="#2c3e50" stroke-width="2" filter="url(#dropshadow)"/>
  <text x="400" y="205" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="white">
    DOCKER COMPOSE
  </text>
  
  <!-- FastAPI Service Container -->
  <rect x="70" y="220" width="320" height="320" rx="6" ry="6" 
        fill="url(#fastapiGradient)" stroke="white" stroke-width="2" filter="url(#dropshadow)"/>
  <text x="230" y="245" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">
    FASTAPI SERVICE
  </text>
  <text x="230" y="260" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white">
    (Container: app)
  </text>
  
  <!-- Presentation Layer -->
  <rect x="90" y="275" width="280" height="120" rx="4" ry="4" 
        fill="url(#presentationGradient)" stroke="white" stroke-width="1"/>
  <text x="230" y="295" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    PRESENTATION LAYER
  </text>
  
  <!-- FastAPI Routes Box -->
  <rect x="100" y="305" width="120" height="75" rx="3" ry="3" 
        fill="rgba(255,255,255,0.9)" stroke="#2c3e50" stroke-width="1"/>
  <text x="160" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    FastAPI Routes
  </text>
  <text x="105" y="335" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    • GET /tasks
  </text>
  <text x="105" y="348" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    • POST /tasks
  </text>
  <text x="105" y="361" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    • POST /{id}/
  </text>
  <text x="105" y="374" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
      complete
  </text>
  
  <!-- Pydantic Schemas Box -->
  <rect x="240" y="305" width="120" height="75" rx="3" ry="3" 
        fill="rgba(255,255,255,0.9)" stroke="#2c3e50" stroke-width="1"/>
  <text x="300" y="320" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    Pydantic
  </text>
  <text x="300" y="335" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    Schemas
  </text>
  <text x="300" y="355" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    (Validation)
  </text>
  
  <!-- Business Logic Layer -->
  <rect x="90" y="405" width="280" height="120" rx="4" ry="4" 
        fill="url(#businessGradient)" stroke="white" stroke-width="1"/>
  <text x="230" y="425" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    BUSINESS LOGIC LAYER
  </text>
  
  <!-- CRUD Operations Box -->
  <rect x="100" y="435" width="120" height="75" rx="3" ry="3" 
        fill="rgba(255,255,255,0.9)" stroke="#2c3e50" stroke-width="1"/>
  <text x="160" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    CRUD Operations
  </text>
  <text x="105" y="465" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    • create_task()
  </text>
  <text x="105" y="478" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    • get_tasks()
  </text>
  <text x="105" y="491" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    • complete_task()
  </text>
  
  <!-- SQLAlchemy ORM Box -->
  <rect x="240" y="435" width="120" height="75" rx="3" ry="3" 
        fill="rgba(255,255,255,0.9)" stroke="#2c3e50" stroke-width="1"/>
  <text x="300" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    SQLAlchemy ORM
  </text>
  <text x="300" y="470" text-anchor="middle" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    Models &amp; Session
  </text>
  
  <!-- FastAPI Port Info -->
  <text x="90" y="555" font-family="Arial, sans-serif" font-size="10" fill="white">
    Port: 8000
  </text>
  <text x="90" y="570" font-family="Arial, sans-serif" font-size="10" fill="white">
    Network: tasktracker_net
  </text>
  
  <!-- PostgreSQL Service Container -->
  <rect x="410" y="220" width="320" height="320" rx="6" ry="6" 
        fill="url(#postgresGradient)" stroke="white" stroke-width="2" filter="url(#dropshadow)"/>
  <text x="570" y="245" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="white">
    POSTGRESQL SERVICE
  </text>
  <text x="570" y="260" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="white">
    (Container: database)
  </text>
  
  <!-- Data Storage Layer -->
  <rect x="430" y="275" width="280" height="250" rx="4" ry="4" 
        fill="rgba(255,255,255,0.1)" stroke="white" stroke-width="1"/>
  <text x="570" y="295" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="white">
    DATA STORAGE
  </text>
  
  <!-- PostgreSQL Database Box -->
  <rect x="450" y="310" width="240" height="180" rx="3" ry="3" 
        fill="rgba(255,255,255,0.9)" stroke="#2c3e50" stroke-width="1"/>
  <text x="570" y="330" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#2c3e50">
    PostgreSQL Database
  </text>
  
  <text x="460" y="355" font-family="Arial, sans-serif" font-size="11" font-weight="bold" fill="#2c3e50">
    Tables:
  </text>
  <text x="460" y="375" font-family="Arial, sans-serif" font-size="10" fill="#2c3e50">
    - tasks
  </text>
  <text x="470" y="390" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    * id (PK) - Integer, Auto-increment
  </text>
  <text x="470" y="405" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    * title - String(200), Not Null
  </text>
  <text x="470" y="420" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    * completed - Boolean, Default False
  </text>
  <text x="470" y="435" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    * created_at - Timestamp, Default Now
  </text>
  <text x="470" y="450" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    * updated_at - Timestamp, Auto-update
  </text>
  
  <text x="460" y="470" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    Indexes:
  </text>
  <text x="470" y="485" font-family="Arial, sans-serif" font-size="9" fill="#2c3e50">
    - Primary Key on id
  </text>
  
  <!-- PostgreSQL Port Info -->
  <text x="430" y="555" font-family="Arial, sans-serif" font-size="10" fill="white">
    Port: 5432
  </text>
  <text x="430" y="570" font-family="Arial, sans-serif" font-size="10" fill="white">
    Volume: postgres_data
  </text>
  <text x="560" y="555" font-family="Arial, sans-serif" font-size="10" fill="white">
    Network: tasktracker_net
  </text>
  
  <!-- Connection Arrow between FastAPI and PostgreSQL -->
  <path d="M 390 380 L 410 380" stroke="#FFD700" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="392" y="375" font-family="Arial, sans-serif" font-size="9" fill="#FFD700">
    SQL
  </text>
  <text x="385" y="390" font-family="Arial, sans-serif" font-size="9" fill="#FFD700">
    Queries
  </text>
  
  <!-- Arrow marker definition -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
            refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e" />
    </marker>
  </defs>
  
  <!-- Technology Stack Legend -->
  <rect x="50" y="580" width="700" height="15" rx="4" ry="4" 
        fill="rgba(44, 62, 80, 0.1)" stroke="#2c3e50" stroke-width="1"/>
  <text x="60" y="592" font-family="Arial, sans-serif" font-size="10" font-weight="bold" fill="#2c3e50">
    Tech Stack: FastAPI + Uvicorn | PostgreSQL + SQLAlchemy | Pydantic | Docker + Docker Compose
  </text>
</svg>
